23rd Nov 2011:
--------------------------------------------------------------------------------------------------------
Module 1 : Session 2:

->Variable declaration, Variable definition.
->NetBeans ->Ctrl+Shift+i =>to import the packages.

---------------------------------------------------------------------------------------------------------
Student Mentor:
christien.a@upgrad.com
8928493304
Bits:
https://www.upgrad.com/
Anjali Rawat <anjali.r@upgrad.com>	-->Admissions Counselor
Mobile: +91-7400029954

Raghav Swarna
m  +91-998-775-9219					-->Chief Admissions Counsellor
raghavendra.s@upgrad.com | https://www.upgrad.com/ 

 pgp-bde@upgrad.com	-->Program related communication

****************************************************************************************************************************************
Applicant Id: BDEC501295
Mail: poshgadu@gmail.com
PRAK428 -->for getting discount coupons

****************************************************************************************************************************************
Algorithms: 
https://techdifferences.com/difference-between-bubble-sort-and-selection-sort.html
https://www.toptal.com/developers/sorting-algorithms
https://www.cs.cmu.edu/~adamchik/15-121/lectures/Sorting%20Algorithms/sorting.html
https://www.geeksforgeeks.org/analysis-of-algorithms-set-3asymptotic-notations/
https://www.tutorialspoint.com/design_and_analysis_of_algorithms/design_and_analysis_of_algorithms_asymptotic_notations_apriori.htm
http://www.cs.cornell.edu/courses/cs312/2004fa/lectures/lecture16.htm
https://www.topcoder.com/community/competitive-programming/tutorials/the-importance-of-algorithms/

https://www.youtube.com/watch?v=YJ7LHaCvaqw
https://www.programiz.com/dsa/heap-sort
http://btechsmartclass.com/DS/U4_T5.html	-->heap sort
https://www.geeksforgeeks.org/divide-and-conquer-algorithm-introduction/
http://web.stanford.edu/class/cs161/CS161Lecture06.pdf		-->Data Structures.
http://web.stanford.edu/class/cs161/CS161Lecture07.pdf		-->HashTables
http://www.opentextbookstore.com/precalc/	-->Precalculus
https://eng.uber.com/uber-big-data-platform/	-->ubder platform/
https://en.wikipedia.org/wiki/Open_addressing	        
https://www.cs.cmu.edu/~avrim/451f11/lectures/lect0922.pdf		-->amortized cost
https://www.geeksforgeeks.org/analysis-algorithm-set-5-amortized-analysis-introduction  -->amortized cost
https://youtu.be/3MpzavN3Mco 	-->amortized cost
https://stackoverflow.com/questions/15079327/amortized-complexity-in-laymans-terms -->amortized cost
http://www.cs.princeton.edu/courses/archive/spr06/cos423/Handouts/Amortized.pdf	-->amortiezed cost
https://cs.stackexchange.com/questions/35419/does-amortized-complexity-always-equal-to-worst-case-complexity-divided-by-n	-->amortized cost
https://www.youtube.com/watch?time_continue=1612&v=08sq0y8V1sE -->aadhar database very good one
https://www.geeksforgeeks.org/hashing-set-3-open-addressing/ -->open addressing and hashing
http://www.mathcs.emory.edu/~cheung/Courses/323/Syllabus/Map/open-addr.html
https://www.domcop.com/top-10-million-domains -->1o million records of data(uploaded to prakkigadu google drive)
HashCode Implementations:
------------------------
http://interactivepython.org/runestone/static/pythonds/SortSearch/Hashing.html
https://javarevisited.blogspot.com/2011/02/how-hashmap-works-in-java.html
https://www.quora.com/Why-HashMap-not-allowing-duplicate-keys-How-it-is-stored/answer/%E0%A4%95%E0%A5%83%E0%A4%AA%E0%A4%BE%E0%A4%B2-%E0%A4%97%E0%A5%8C%E0%A4%B0%E0%A4%B5-Kripal-Gaurav?share=0b9667f6&srid=nDKq
https://javarevisited.blogspot.com/2012/12/how-to-sort-hashmap-java-by-key-and-value.html
https://javarevisited.blogspot.com/2011/12/how-to-traverse-or-loop-hashmap-in-java.html
https://www.sitepoint.com/how-to-implement-javas-hashcode-correctly/

Bloom Filter:
-------------
http://pages.cs.wisc.edu/~cao/papers/summary-cache/node8.html
https://hur.st/bloomfilter/?n=4000&p=1.0E-7&m=1024&k=
https://llimllib.github.io/bloomfilter-tutorial/

******************************************************************************************************************************
******************************************************************************************************************************
https://learn.upgrad.com/v/course/244/session/23868/segment/122280 -->collision Resolution
